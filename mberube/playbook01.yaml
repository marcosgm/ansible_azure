---
- name: create Azure instance
  hosts: localhost
  connection: local
  gather_facts: false
  vars: 
    vm_net: vmnetwork 
    pub_key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT6zRINa7VVUBsCEwdf51rg6DAdIYfuelg0Z/T+8exZ/AFESXG1LvCcPLFyqchNzYNB65NDZ5+uKxfC5r/WZZUrXHyBsUCB5jgkUM3MF2QPm8d0Kz01lMP2fp19Nym9CwqTfCtNCuNfLAr2avPoopJe7srFunW9TA0Ja6mVwQKzHruHLCaKUvxCcCRBFkd2lqJ/A8s5MoZZmjychcDCOCj1w8tZj/fPVkyWClWlZ06Fo1BLVfPQ/g5xxRJQohJBevwsnnzR/mWkG/CQ/yR72W0y9qrtkNToKh6lRlqtsEykyQEOfN+RX/56yRkasK6oQc4/aCC+fvCnjGYSoyAMUeL tower@tower
  tasks: 
  - name: Create a virtual network
    azure_rm_virtualnetwork:
      name: "{{ vm_net }}"
      resource_group: mberube
      address_prefixes_cidr:
          - "10.1.0.0/16"
  
  - name: Create a subnet
    azure_rm_subnet:
      name: vmsubnet
      virtual_network_name: "{{ vm_net }}"
      resource_group: mberube
      address_prefix_cidr: "10.1.0.0/24"
  
  - name: Azure init
    azure_rm_virtualmachine:
        resource_group: mberube
        name: "{{ instance_name }}"
        admin_username: "{{ user }}"
        ssh_password_enabled: false
        ssh_public_keys:
          - path: /home/{{ user }}/.ssh/authorized_keys
            key_data: "{{ pub_key }}"
        image:
          offer: RHEL
          publisher: RedHat
          sku: '7.3'
          version: latest
    register: instance1

  - name: Open port
    azure_rm_securitygroup:
      resource_group: mberube
      name: "{{ instance_name }}01"
      rules:
        - name: apache
          protocol: Tcp
          destination_port_range: 80
          access: Allow
          priority: 101
          direction: Inbound

  - set_fact:
      instance1_public_ip: "{{ instance1.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"

  - debug:
      var: instance1_public_ip

  - name: Add new instance in Ansible's inventory
    add_host:
      hostname: "{{ instance1_public_ip }}"
      groups: launched
      ---
      
- name: Install and launch apache
  hosts: launched
  become: yes
  vars:
    ansible_ssh_user: "{{ user }}"
  tasks: 
    - name: wait for SSH 
      local_action: wait_for port22 hosts={{ launched }}

    - name: install apache
      yum: name=httpd state=present
      notify: RestartApache 
      
    - name: Open Firewall ports
      firewalld: zone=public port=80/tcp permanent=true state=enabled
      notify: ReloadFirewall

handlers: 
    - name: RestartApache
      service: name=httpd state=restarted enabled=yes
    - name: ReloadFirewall
      shell: firewall-cmd --reload




